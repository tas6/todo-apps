buildscript {
    ext {
        springBootVersion = '1.4.2.RELEASE'
    }
    repositories {
        jcenter()
        maven { url "http://repo.spring.io/libs-snapshot" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('org.hidetake:gradle-ssh-plugin:2.7.0')
    }
}
plugins {
  id 'org.hidetake.ssh' version '2.7.0'
}
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.hidetake.ssh'

war {
    baseName = 'todo-apps'
    version =  '0.0.1'
}

remotes {
  api001 {
    host = 'todo-api-server'
    user = 'ec2-user'
    identity = new File('~/.ssh/XXX.pem')
  }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

// doma用の設定
// 参照:http://doma.readthedocs.io/ja/stable/build/
// ->
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
processResources.destinationDir = compileJava.destinationDir
compileJava.dependsOn processResources

def aptGeneratePath = '.apt_generated'
compileJava.options.compilerArgs = ['-s', aptGeneratePath]
new File(aptGeneratePath).mkdirs()
// <-


dependencies {

    // compile
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.flywaydb:flyway-core')
    compile('org.seasar.doma.boot:doma-spring-boot-starter:1.1.0')
    compile('org.lazyluke:log4jdbc-remix:0.2.7')
    compile('org.apache.commons:commons-lang3:3.5')

    // compileOnly
    compileOnly('org.projectlombok:lombok')

    // runtime
    runtime('com.h2database:h2')

    // providedRuntime
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')

    // testCompile
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.dbunit:dbunit:2.5.0')
    testCompile('com.github.springtestdbunit:spring-test-dbunit:1.2.0')

    // testCompileOnly
    testCompileOnly('org.projectlombok:lombok')

}

task deploy(dependsOn: 'war') << {
    ssh.run {
        settings {
            pty = true
        }
        session([remotes.api001]) {
            put from: war.archivePath.path, into: '/tmp/'
            executeSudo 'service tomcat8 stop'
            executeSudo "rm -rf /usr/share/tomcat8/webapps/ROOT"
            executeSudo "mv /tmp/${war.archiveName} /usr/share/tomcat8/webapps/ROOT.war"
            executeSudo 'service tomcat8 start'
        }
    }
}